void gpioInit(IO_7segment* SevenSeg, softSpi* spiFlash)
{

	GPIO_InitTypeDef GPIO_InitStructure;
	GpioSpi spiPinStruct;

	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE); // GPIO_A
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE); // GPIO_B
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE); // GPIO_C
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE); // GPIO_D
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOE, ENABLE); // GPIO_E
	//RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOF, ENABLE); // GPIO_F
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOG, ENABLE); // GPIO_G

	spiPinStruct.csPORT = GPIOB;
	spiPinStruct.csPIN = GPIO_Pin_5;

	spiPinStruct.clkPORT = GPIOB;
	spiPinStruct.clkPIN = GPIO_Pin_4;

	spiPinStruct.siPORT = GPIOC;
	spiPinStruct.siPIN = GPIO_Pin_10;

	spiPinStruct.soPORT = GPIOC;
	spiPinStruct.soPIN = GPIO_Pin_11;

	spiFlash->init(spiPinStruct);

	SevenSeg->GpioIO.A.Port = GPIOC; //
	SevenSeg->GpioIO.B.Port = GPIOC; //
	SevenSeg->GpioIO.C.Port = GPIOC; //
	SevenSeg->GpioIO.D.Port = GPIOC; //
	SevenSeg->GpioIO.E.Port = GPIOC; //
	SevenSeg->GpioIO.F.Port = GPIOB; //
	SevenSeg->GpioIO.G.Port = GPIOB; //

	SevenSeg->GpioIO.DP.Port = GPIOC; //
	SevenSeg->GpioIO.SG.Port = GPIOB; //

	SevenSeg->GpioIO.A.Pin = GPIO_Pin_13; //
	SevenSeg->GpioIO.B.Pin = GPIO_Pin_14; //
	SevenSeg->GpioIO.C.Pin = GPIO_Pin_15; //
	SevenSeg->GpioIO.D.Pin = GPIO_Pin_4; //
	SevenSeg->GpioIO.E.Pin = GPIO_Pin_5; //
	SevenSeg->GpioIO.F.Pin = GPIO_Pin_0; //
	SevenSeg->GpioIO.G.Pin = GPIO_Pin_1; //
	SevenSeg->GpioIO.DP.Pin = GPIO_Pin_8; //
	SevenSeg->GpioIO.SG.Pin = GPIO_Pin_12; //

	SevenSeg->Digit[0].Port = GPIOB; //
	SevenSeg->Digit[1].Port = GPIOB; //
	SevenSeg->Digit[2].Port = GPIOB; //
	SevenSeg->Digit[3].Port = GPIOB; //

	SevenSeg->Digit[3].Pin = GPIO_Pin_2; //
	SevenSeg->Digit[2].Pin = GPIO_Pin_10; //
	SevenSeg->Digit[1].Pin = GPIO_Pin_11; //
	SevenSeg->Digit[0].Pin = GPIO_Pin_13; //

	SevenSeg->GpioIOConfig();

	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2;
	GPIO_Init(GPIOA, &GPIO_InitStructure);

	RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1, ENABLE);
	// ADC input PORT_C_Pin0

	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
	GPIO_Init(GPIOA, &GPIO_InitStructure);

	ADC_InitTypeDef ADC_InitStructure;    // ADC
	ADC_CommonInitTypeDef ADC_CommonInitStruct; // ADC

	ADC_CommonInitStruct.ADC_Mode = ADC_Mode_Independent;
	ADC_CommonInitStruct.ADC_Prescaler = ADC_Prescaler_Div2;
	ADC_CommonInitStruct.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
	ADC_CommonInitStruct.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
	ADC_CommonInit(&ADC_CommonInitStruct);

	/* Configure ADC1 to convert continously channel14 ***********/
	ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
	ADC_InitStructure.ADC_ScanConvMode = DISABLE;
	ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
	ADC_InitStructure.ADC_ExternalTrigConvEdge =
	ADC_ExternalTrigConvEdge_None;
	ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConvEdge_None;
	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
	ADC_InitStructure.ADC_NbrOfConversion = 1;
	ADC_Init(ADC1, &ADC_InitStructure);

	ADC_RegularChannelConfig(ADC1, ADC_Channel_5, 1, ADC_SampleTime_3Cycles);
	ADC_Cmd(ADC1, ENABLE);



	ADC_SoftwareStartConv(ADC1);



}












//	spiPinStruct.csPORT = GPIOA;
//	spiPinStruct.csPIN = GPIO_Pin_4;
//
//	spiPinStruct.clkPORT = GPIOA;
//	spiPinStruct.clkPIN = GPIO_Pin_5;
//
//	spiPinStruct.siPORT = GPIOA;
//	spiPinStruct.siPIN = GPIO_Pin_6;
//
//	spiPinStruct.soPORT = GPIOA;
//	spiPinStruct.soPIN = GPIO_Pin_0;
//
//	spiFlash->init(spiPinStruct);
//
//	SevenSeg->GpioIO.A.Port = GPIOE;
//	SevenSeg->GpioIO.B.Port = GPIOE;
//	SevenSeg->GpioIO.C.Port = GPIOE;
//	SevenSeg->GpioIO.D.Port = GPIOE;
//	SevenSeg->GpioIO.E.Port = GPIOE;
//	SevenSeg->GpioIO.F.Port = GPIOE;
//	SevenSeg->GpioIO.G.Port = GPIOE;
//
//	SevenSeg->GpioIO.DP.Port = GPIOE;
//	SevenSeg->GpioIO.SG.Port = GPIOD;
//
//	SevenSeg->GpioIO.A.Pin = GPIO_Pin_0;
//	SevenSeg->GpioIO.B.Pin = GPIO_Pin_1;
//	SevenSeg->GpioIO.C.Pin = GPIO_Pin_2;
//	SevenSeg->GpioIO.D.Pin = GPIO_Pin_3;
//	SevenSeg->GpioIO.E.Pin = GPIO_Pin_4;
//	SevenSeg->GpioIO.F.Pin = GPIO_Pin_5;
//	SevenSeg->GpioIO.G.Pin = GPIO_Pin_6;
//	SevenSeg->GpioIO.DP.Pin = GPIO_Pin_7;
//	SevenSeg->GpioIO.SG.Pin = GPIO_Pin_6;
//
//	SevenSeg->Digit[0].Port = GPIOE;
//	SevenSeg->Digit[1].Port = GPIOE;
//	SevenSeg->Digit[2].Port = GPIOE;
//	SevenSeg->Digit[3].Port = GPIOE;
//
//	SevenSeg->Digit[0].Pin = GPIO_Pin_8;
//	SevenSeg->Digit[1].Pin = GPIO_Pin_9;
//	SevenSeg->Digit[2].Pin = GPIO_Pin_10;
//	SevenSeg->Digit[3].Pin = GPIO_Pin_11;
//
//	SevenSeg->GpioIOConfig();
//
//	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;
//	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
//	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
//	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
//
//	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_15;
//	GPIO_Init(GPIOG, &GPIO_InitStructure);
//
//	RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1, ENABLE);
//	// ADC input PORT_C_Pin0
//	 ADC_DeInit();
//	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
//	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
//	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
//	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
//	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
//	GPIO_Init(GPIOC, &GPIO_InitStructure);
//
//	ADC_InitTypeDef ADC_InitStructure;    // ADC
//	ADC_CommonInitTypeDef ADC_CommonInitStruct; // ADC
//
//	ADC_CommonInitStruct.ADC_Mode = ADC_Mode_Independent;
//	ADC_CommonInitStruct.ADC_Prescaler = ADC_Prescaler_Div2;
//	ADC_CommonInitStruct.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
//	ADC_CommonInitStruct.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_20Cycles;
//	ADC_CommonInit(&ADC_CommonInitStruct);
//
//	/* Configure ADC1 to convert continously channel14 ***********/
//	ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
//	ADC_InitStructure.ADC_ScanConvMode = DISABLE;
//	ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
//	ADC_InitStructure.ADC_ExternalTrigConvEdge =
//	ADC_ExternalTrigConvEdge_None;
//	ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConvEdge_None;
//	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
//	ADC_InitStructure.ADC_NbrOfConversion = 1;
//	ADC_Init(ADC1, &ADC_InitStructure);
//
//	ADC_RegularChannelConfig(ADC1, ADC_Channel_10, 1, ADC_SampleTime_480Cycles);
//	ADC_Cmd(ADC1, ENABLE);
//
//
//	ADC_SoftwareStartConv(ADC1);